SELECT MEM_ID AS 회원번호, 
       MEM_NAME AS 회원명, 
       MEM_JOB AS 직업, 
       MEM_MILEAGE AS 마일리지
  FROM LYS00.MEMBER
 WHERE MEM_JOB = '주부' OR MEM_MILEAGE >= 2000
 ORDER BY 3;
 
 SELECT MEM_ID AS 회원번호, 
       MEM_NAME AS 회원명, 
       MEM_JOB AS 직업, 
       MEM_MILEAGE AS 마일리지
  FROM LYS00.MEMBER
 WHERE MEM_JOB = '주부'
 UNION ALL
SELECT MEM_ID, MEM_NAME, MEM_JOB, MEM_MILEAGE AS 마일리지
  FROM LYS00.MEMBER
 WHERE MEM_MILEAGE >= 2000
 ORDER BY 2;
 
INSERT INTO LYS00.BUDGET VALUES('202103', 1000);
INSERT INTO LYS00.BUDGET VALUES('202104', 1500);
INSERT INTO LYS00.BUDGET VALUES('202105', 2000);
 
INSERT INTO LYS00.SALES VALUES('202103', 1500);
INSERT INTO LYS00.SALES VALUES('202104', 900);
INSERT INTO LYS00.SALES VALUES('202105', 2000);
 
SELECT * FROM LYS00.BUDGET;
SELECT * FROM LYS00.SALES;

SELECT PERIOD AS 기간,
       BUDGET_AMT AS 예산, 
       0 AS 실적
  FROM LYS00.BUDGET
 UNION
SELECT PERIOD AS 기간,
       0 AS 예산, 
       SALE_AMT AS 실적
  FROM LYS00.SALES
  ORDER BY 1;
  
(계획대비 실적)

SELECT PERIOD AS 기간,
       SUM(BUDGET_AMT) AS 예산,
       SUM(SALE_AMT) AS 실적,
       ROUND(SUM(SALE_AMT)/SUM(BUDGET_AMT),2) * 100 || '%' AS 달성율
  FROM (SELECT PERIOD, BUDGET_AMT, 0 AS SALE_AMT
          FROM LYS00.BUDGET
         UNION
        SELECT PERIOD, 0, SALE_AMT
          FROM LYS00.SALES
          ORDER BY 1)
 GROUP BY PERIOD; 
 
 INSERT INTO LYS00.SCORE VALUES('2024','중간고사', 80, 90, 70);
 INSERT INTO LYS00.SCORE VALUES('2025','기말고사', 90, 100, 60);
 
 SELECT * FROM LYS00.SCORE;
 
 SELECT PERIOD AS 기간,
        GUBUN AS 구분,
        '국어' AS 과목,
        KOR AS 점수
   FROM LYS00.SCORE
  UNION
 SELECT PERIOD, GUBUN, '수학', MAT
   FROM LYS00.SCORE
  UNION
 SELECT PERIOD, GUBUN, '영어', ENG
   FROM LYS00.SCORE
  ORDER BY 2 DESC; 

(2020년 6월에 판매된 상품의  상품번호, 상품명, 판매가)
SELECT B.PROD_ID AS 상품번호, 
       A.PROD_NAME AS 상품명,
       A.PROD_PRICE AS 판매가
  FROM LYS00.PROD A, LYS00.CART B
 WHERE A.PROD_ID = B.PROD_ID
   AND B.CART_NO LIKE '202006%'
INTERSECT 
SELECT B.PROD_ID, 
       A.PROD_NAME,
       A.PROD_PRICE
  FROM LYS00.PROD A, LYS00.CART B
 WHERE A.PROD_ID = B.PROD_ID
   AND B.CART_NO LIKE '202007%'
 ORDER BY 1;

SELECT B.PROD_ID AS 상품번호, 
       A.PROD_NAME AS 상품명,
       A.PROD_PRICE AS 판매가
  FROM LYS00.PROD A
 INNER JOIN LYS00.CART B ON (A.PROD_ID = B.PROD_ID AND B.CART_NO LIKE '202006%') 
 WHERE EXISTS (SELECT 1
                 FROM LYS00.CART C
                WHERE C.CART_NO LIKE '202007%'
                  AND C.PROD_ID = B.PROD_ID)
 ORDER BY 1;

(2020년 6월에 판매된 상품의  상품번호, 상품명, 판매가)
SELECT DISTINCT B.PROD_ID AS 상품번호, 
       A.PROD_NAME AS 상품명,
       A.PROD_PRICE AS 판매가
  FROM LYS00.PROD A, LYS00.CART B
 WHERE A.PROD_ID = B.PROD_ID
   AND B.CART_NO LIKE '202006%';

(2020년 7월에 판매된 상품의  상품번호, 상품명, 판매가)
SELECT DISTINCT B.PROD_ID AS 상품번호, 
       A.PROD_NAME AS 상품명,
       A.PROD_PRICE AS 판매가
  FROM LYS00.PROD A, LYS00.CART B
 WHERE A.PROD_ID = B.PROD_ID
   AND B.CART_NO LIKE '202007%'
 MINUS
SELECT DISTINCT B.PROD_ID, A.PROD_NAME, A.PROD_PRICE
  FROM LYS00.PROD A, LYS00.CART B
 WHERE A.PROD_ID = B.PROD_ID
   AND B.CART_NO LIKE '202006%'
 ORDER BY 1;

SELECT DISTINCT B.PROD_ID AS 상품번호, 
       A.PROD_NAME AS 상품명,
       A.PROD_PRICE AS 판매가
  FROM LYS00.PROD A, LYS00.CART B
 WHERE A.PROD_ID = B.PROD_ID
   AND B.CART_NO LIKE '202007%'
   AND NOT EXISTS (SELECT 1
                     FROM LYS00.CART C
                    WHERE C.PROD_ID = B.PROD_ID
                      AND C.CART_NO LIKE '202006%')
 ORDER BY 1;




 