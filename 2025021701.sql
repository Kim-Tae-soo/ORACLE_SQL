CREATE OR REPLACE TRIGGER tg_insert_buyprod
    AFTER INSERT ON BUYPROD
      FOR EACH ROW
DECLARE
    
BEGIN
    UPDATE REMAIN A
       SET A.REMAIN_I = A.REMAIN_I + (:NEW.BUY_QTY),
           A.REMAIN_J_99 = A.REMAIN_J_99 + (:NEW.BUY_QTY),
           A.REMAIN_DATE = TO_DATE('20200611')
     WHERE A.PROD_ID = (:NEW.PROD_ID)
       AND A.REMAIN_YEAR = TO_CHAR(EXTRACT(YEAR FROM(:NEW.BUY_DATE)));
END;

INSERT INTO BUYPROD VALUES (TO_DATE('20200611'),'P202000021',10);
COMMIT;

-- PROD테이블
SELECT PROD_ID, ROUND(PROD_PRICE*0.0007)
  FROM PROD;
  
UPDATE PROD
   SET PROD_MILEAGE = ROUND(PROD_PRICE*0.0007)

사용예
CREATE OR REPLACE TRIGGER tg_change_cart
    AFTER INSERT OR UPDATE OR DELETE ON CART
    FOR EACH ROW
DECLARE
    L_QTY NUMBER:=0;
    L_MID MEMBER.MEM_ID%TYPE;
    L_PROD_ID PROD.PROD_ID%TYPE;
    L_DATE DATE;
    L_MILE_AMT NUMBER:=0;
BEGIN
    IF INSERTING THEN
        L_QTY := (:NEW.CART_QTY);
        L_MID := (:NEW.MEM_ID);
        L_PROD_ID := (:NEW.PROD_ID);
        L_DATE := TO_DATE(SUBSTR(:NEW.CART_NO,1,8));
    ELSIF UPDATING THEN
        L_QTY := (:NEW.CART_QTY)-(:OLD.CART_QTY);
        L_MID := (:NEW.MEM_ID);
        L_PROD_ID := (:NEW.PROD_ID);
        L_DATE := TO_DATE(SUBSTR(:NEW.CART_NO,1,8));
    ELSIF DELETING THEN
        L_QTY := -(:OLD.CART_QTY);
        L_MID := (:OLD.MEM_ID);
        L_PROD_ID := (:OLD.PROD_ID);
        L_DATE := TO_DATE(SUBSTR(:OLD.CART_NO,1,8));
    END IF;
    -- 재고수불 테이블 UPDATE
    UPDATE REMAIN A
       SET A.REMAIN_O = A.REMAIN_O + L_QTY;
           A.REMAIN_J_99 = A.REMAIN_J_99 - L_QTY;
           A.REAMAIN_DATE = L_DATE;
     WHERE A.PROD_ID = L_PROD_ID
       AND A.REMAIN_YEAR = TO_CHAR(EXTRACT(YEAR FROM L_DATE));
       
    -- 회원 마일리지 업데이트
    SELECT PROD_MILEAGE 
      INTO L_MILE_AMT 
      FROM PROD 
     WHERE PROD_ID = L_PROD_ID;
     
    UPDATE MEMBER A
       SET MEM_MILEAGE = MEM_MILEAGE+(L_QTY*L_MILE_AMT)
     WHERE MEM_ID = L_MID;    
END;
    
    
CREATE OR REPLACE TRIGGER tg_change_cart
    AFTER INSERT OR UPDATE OR DELETE ON CART
    FOR EACH ROW
DECLARE
    L_QTY NUMBER:=0;
    L_MID MEMBER.MEM_ID%TYPE;
    L_PROD_ID PROD.PROD_ID%TYPE;
    L_DATE DATE;
    L_MILE_AMT NUMBER:=0;
BEGIN
    IF INSERTING THEN
        L_QTY:=(:NEW.CART_QTY);
        L_MID:=(:NEW.MEM_ID);
        L_PROD_ID:=(:NEW.PROD_ID);
        L_DATE:=TO_DATE(SUBSTR(:NEW.CART_NO,1,8));
    ELSIF UPDATING THEN
        L_QTY:=(:NEW.CART_QTY)-(:OLD.CART_QTY);
          L_MID:=(:NEW.MEM_ID);
        L_PROD_ID:=(:NEW.PROD_ID);
          L_DATE:=TO_DATE(SUBSTR(:NEW.CART_NO,1,8));
    ELSIF DELETING THEN
        L_QTY:=-(:OLD.CART_QTY);
        L_MID:=(:OLD.MEM_ID);
        L_PROD_ID:=(:OLD.PROD_ID);
          L_DATE:=TO_DATE(SUBSTR(:OLD.CART_NO,1,8));
          END IF;
          -- 재고수불테이블 UPDATE
          UPDATE REMAIN A
          SET A.REMAIN_O=A.REMAIN_O+L_QTY,
          A.REMAIN_J_99=A.REMAIN_J_99 - L_QTY,
          A.REMAIN_DATE=L_DATE
    WHERE A.PROD_ID=L_PROD_ID
    AND A.REMAIN_YEAR=TO_CHAR (EXTRACT(YEAR FROM L_DATE));
    
    --회원 마일리지 UPDATE
 SELECT PROD_MILEAGE INTO L_MILE_AMT
        FROM PROD
        WHERE PROD_ID=L_PROD_ID;
        
    UPDATE MEMBER A 
        SET MEM_MILEAGE=MEM_MILEAGE+(L_QTY*L_MILE_AMT)
        WHERE MEM_ID=L_MID;
END;
    
INSERT INTO CART VALUES
    ('d001', fn_create_cart_no(TO_DATE('20200612'), 'd001'), 'P202000021', 6);
COMMIT;

UPDATE CART
   SET CART_QTY=2
 WHERE CART_NO LIKE '20200612%'
   AND PROD_ID = 'P202000021';
   
DELETE FROM CART 
 WHERE CART_NO LIKE '20200612%'
   AND PROD_ID = 'P202000021';